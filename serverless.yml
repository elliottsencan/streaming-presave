service: streaming-pre-save

frameworkVersion: ">=1.1.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs4.3
  role: arn:aws:iam::353948116047:role/music-presave-application
  environment:
    CAMPAIGNS_TABLE: ${self:service}-campaigns-${opt:stage, self:provider.stage}
    RELEASES_TO_CAMPAIGNS_TABLE: ${self:service}-campaigns-to-releases-${opt:stage, self:provider.stage}
    SUBSCRIBERS_TABLE: ${self:service}-subscribers-${opt:stage, self:provider.stage}
    UPDATE_QUEUE_TABLE: ${self:service}-update-queue-${opt:stage, self:provider.stage}
    SPOTIFY_CLIENT_ID: adc4a99fec564ab19629189544e49c44
    SPOTIFY_CLIENT_SECRET: b98ee2957e874fb99ab17fec2838efcb

functions:
  scheduled-job:
    handler: scheduled-jobs/campaigns.query
    # events:
      # Invoke Lambda function every minute
      # - schedule: rate(1 minute)
  update-queue:
    handler: update-queue/process.process
  create-release:
    handler: releases/create.create
  create-subscribers:
    handler: subscribers/create.create
    events:
      - http:
          path: subscribers
          method: post
          cors: true
  create-campaign:
    handler: campaigns/create.create
    events:
      - http:
          path: campaigns
          method: post
          cors: true
  list-campaign:
    handler: campaigns/list.list
    events:
      - http:
          path: campaigns
          method: get
          cors: true
  get-campaign:
    handler: campaigns/get.get
    events:
      - http:
          path: campaigns/{campaignId}
          method: get
          cors: true
  update-campaign:
    handler: campaigns/update.update
    events:
      - http:
          path: campaigns/{campaignId}
          method: put
          cors: true
  delete-campaign:
    handler: campaigns/delete.delete
    events:
      - http:
          path: campaigns/{campaignId}
          method: delete
          cors: true
resources:
  Resources:
    CampaignsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: campaignId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:provider.environment.CAMPAIGNS_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
    ReleaseToCampaignsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: releaseDate
            AttributeType: N
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: releaseDate
            KeyType: HASH
          -
            AttributeName: campaignId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.RELEASES_TO_CAMPAIGNS_TABLE}
    SubscribersDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: subscriberId
            AttributeType: S
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: subscriberId
            KeyType: HASH
          -
            AttributeName: campaignId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.SUBSCRIBERS_TABLE}
    UpdateQueueDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: subscriberId
            AttributeType: S
          -
            AttributeName: campaignId
            AttributeType: S
        KeySchema:
          -
            AttributeName: subscriberId
            KeyType: HASH
          -
            AttributeName: campaignId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.UPDATE_QUEUE_TABLE}
        StreamSpecification:
          StreamViewType: NEW_IMAGE
